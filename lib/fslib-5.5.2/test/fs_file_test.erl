%%% $Id: fs_file_test.erl,v 1.5 2003/09/15 14:16:14 enewhuis Exp $
%%%-------------------------------------------------------------------
%%% File    : fs_file_test.erl
%%% Author  : Martin J. Logan <martin@dhcp-lom-194-186.erlware.com>
%%%
%%% @doc  tests fs_file functions.
%%% @end
%%%
%%% Created :  1 Aug 2003 by Martin J. Logan <martin@dhcp-lom-194-186.erlware.com>
%%%-------------------------------------------------------------------
-module (fs_file_test).

%%--------------------------------------------------------------------
%% Include files
%%--------------------------------------------------------------------

%%--------------------------------------------------------------------
%% External exports
%%--------------------------------------------------------------------
-export ([
	  all/1
	 ]).

%%--------------------------------------------------------------------
%% Internal exports
%%--------------------------------------------------------------------
-export ([
	 ]).

%%--------------------------------------------------------------------
%% Macros
%%--------------------------------------------------------------------
-define (TEST_FILE, "fs_file_test.txt").

%%--------------------------------------------------------------------
%% Records
%%--------------------------------------------------------------------

%%====================================================================
%% External functions
%%====================================================================
%%--------------------------------------------------------------------
%% @doc All the starting point for the test functions.
%% @spec all() -> ok | exit(Reason)
%% @end 
%%--------------------------------------------------------------------

all (Config) ->
    test (read_csv).
    
    
%%====================================================================
%% Test Cases
%%====================================================================

test (read_csv) ->
    create_file (?TEST_FILE),
    [["1"], ["3"]] = fs_file:read_csv (?TEST_FILE, "///"),
    file:delete (?TEST_FILE),
    ok.


%%====================================================================
%% Internal functions
%%====================================================================

create_file (FileName) ->
    {ok, IODevice} = file:open (FileName, [write]),
    ok=file:write (IODevice, "1\n"),
    ok=file:write (IODevice, "/// 2\n"),
    ok=file:write (IODevice, "3\n"),
    file:close (IODevice).
